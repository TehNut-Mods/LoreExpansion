buildscript {
    ext {
        minecraft_version = '1.8.9'
        forge_version = '11.15.1.1722'
        kotlin_version = '1.0.0-beta-4589'
        mod_version = '1.0.0'
    }

    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle.forge'

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    shade "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    shade "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"
    testCompile "junit:junit:4.+"
}

version = mod_version
group= "me.dmillerw.loreexpansion"
archivesBaseName = "LoreExpansion"

minecraft {
    version = minecraft_version + "-" + forge_version
    runDir = "run"
    mappings = "stable_20"

    replace '%MOD_VERSION%', mod_version
    replace '%KOTLIN_VERSION%', kotlin_version
}

processResources  {
    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", mod_version
    inputs.property "minecraft_version", minecraft_version
    inputs.property 'kotlin_version', kotlin_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'mod_version':mod_version, 'minecraft_version':minecraft_version, 'kotlin_version':kotlin_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
repositories {
    mavenCentral()
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}
